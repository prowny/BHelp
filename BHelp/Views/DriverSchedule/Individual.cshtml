@using System.Web.Mvc.Html
@model BHelp.ViewModels.DriverScheduleViewModel
@{ Layout = null; }
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Individual Driver Schedule Signup </title>
    <style>
        #SubmitButton {
            background-color: blue;
            color: white
        }
    </style>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="@Url.Content("/Scripts/BHelpFunctions.js")"></script>
    <link rel="icon" href="~/images/bhlogo.ico" type="image/x-icon" />
</head>
<body>
    @using (Html.BeginForm("Individual", "DriverSchedule", 
        Model, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div>
            Individual Signup & Cancel Signup for driver &nbsp;<b>@User.Identity.Name</b>
            <br />
        </div>
        <div>
            @*===================== Calendar Section =================*@
            <table>
                <tr>
                    <td>
                        <b>Bethesda Help Drivers Schedule - </b>
                        <span style="color: red; font: bold">
                            <b>@Model.MonthName&nbsp;@Model.Year</b>
                        </span>
                    </td>

                    @{ var previousDt = Model.Date.AddMonths(-1);}
                    @{ var previousYrMo = previousDt.Year * 100 + previousDt.Month; }
                    @if (previousYrMo >= Model.TodayYearMonth)
                    {
                        <td>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            @Html.ActionLink(" Previous Month", "PreviousMonthIndividual",
                                new { @Model.Month, @Model.Year })
                        </td>
                    }

                    @{ var nextDt = Model.Date.AddMonths(1); }
                    @{ var nextYrMo = nextDt.Year * 100 + nextDt.Month; }
                    @{ var maxDt = DateTime.Today.AddMonths(3); }
                    @{ var maxYrMo = maxDt.Year * 100 + maxDt.Month; }
                    @if (nextYrMo <= maxYrMo)
                    {
                        <td>
                            &nbsp;&nbsp;@Html.ActionLink(" Next Month", "NextMonthIndividual",
                                            new { @Model.Month, @Model.Year })
                        </td>
                    }
                    <td>&nbsp;&nbsp;&nbsp;&nbsp;@Html.ActionLink("Return to Dashboard", "Index", "Home")</td>
                </tr>
            </table>
        </div>
        <div>
            <table Id="schedule">
                <tr>
                    <th class="top">MONDAY</th>
                    <th class="top">TUESDAY</th>
                    <th class="top">WEDNESDAY</th>
                    <th class="top">THURSDAY</th>
                    <th class="top">FRIDAY</th>
                </tr>

                @{ var i = 0; }
                @for (var row = 1; row < 6; row++)
                {
                    <tr>
                        @for (var col = 1; col < 6; col++)
                        {
                            i++;
                            var bgcolor = "white";
                            if (Model.DriversSchedule[i].Date <= DateTime.Today)
                            {
                                bgcolor = "grey";
                            }
                            <td style="border: thin solid black; vertical-align: top; background-color: @bgcolor">
                                @if (Model.DriversSchedule[i].Date > DateTime.MinValue && Model.BoxDay[row, col].Month == Model.Month)
                                {
                                    <b>@Html.Label(Model.DriversSchedule[i].DayString)</b>

                                    if (Model.BoxDriverName[i] == null)
                                    {
                                        if (!Model.BoxHoliday[i] && Model.BoxDay[row, col].Month == Model.Month)
                                        {
                                            <span style="font-size: small">
                                                &nbsp;
                                                @Html.Label("Driver: ")
                                            </span>
                                            <span style="text-decoration-color: red">
                                                @Html.Label("TBD", new { style = "color: red; font-weight: bold" })
                                            </span>
                                            if (Model.BoxDay[row, col] > DateTime.Today 
                                                && User.IsInRole( "Driver"))
                                            {
                                                <span>
                                                    <br />
                                                    &nbsp;&nbsp;
                                                    @Html.Label("Sign Up:", new { style = "color: red" })
                                                    @Html.ActionLink("Sign Up", "DriverSignUp", 
                                                        new{ idx = i, date = Model.BoxDay[row, col], cancel = false })
                                                </span>
                                            }
                                        }
                                    }

                                    else /*DriverName is Not Null:*/
                                    {
                                        if (Model.BoxDay[row, col].Month == Model.Month)
                                        {
                                            <span style="font-size: small">
                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                @Html.Label("Driver")
                                            </span>
                                            <br />
                                            @Html.Raw(Model.BoxDriverName[i])
                                            if (Model.BoxDriverId[i] == Model.CurrentUserId
                                                && User.IsInRole("Driver"))
                                            {
                                                <br />
                                                <span style="text-decoration-color: red">
                                                    &nbsp;&nbsp;
                                                    @Html.Label("Cancel:", new { style = "color: red" })
                                                    @Html.ActionLink("Cancel", "DriverSignUp", 
                                                        new{ idx = i, date = Model.BoxDay[row, col], cancel = true })     
                                                </span>
                                            }
                                            if (Model.BoxDriverPhone[i] != null)
                                            {
                                                <br />
                                                @Html.Label(Model.BoxDriverPhone[i])
                                            }

                                            if (Model.BoxDriverPhone2[i] != null)
                                            {
                                                <br />
                                                @Html.Label(Model.BoxDriverPhone2[i])
                                            }
                                            if (Model.BoxDriverEmail[i] != null)
                                            {
                                                const string subject = "BHELP Food Program";
                                                var body = @Model.DriversSchedule[i].Date.ToLongDateString()
                                                           + " Driver: " + @Model.BoxDriverName[i];
                                                <a href="mailto:@Uri.EscapeDataString(Model.BoxDriverEmail[i])
                                            ?Subject=@Uri.EscapeDataString(subject)
                                            &body=@Uri.EscapeDataString(body)">
                                                    @Model.BoxDriverEmail[i]
                                                </a>
                                            }
                                        }
                                    }
                                }
                                @if (Model.BoxBackupDriverName[i] == null)
                                {
                                    if (!Model.BoxHoliday[i] && Model.BoxDay[row, col].Month == Model.Month)
                                    {
                                        <br />
                                        <span style="font-size: small">
                                            &nbsp;&nbsp;&nbsp;&nbsp;
                                            @Html.Label("Backup: ")
                                        </span>
                                        <span style="text-decoration-color: red">
                                            @Html.Label("TBD", new { style = "color: red; font-weight: bold" })
                                        </span>
                                        if (Model.BoxDay[row, col] > DateTime.Today
                                            && User.IsInRole("Driver"))
                                        {
                                            <br />
                                            <span style="text-decoration-color: red">
                                                &nbsp;&nbsp;
                                                @Html.Label("Sign Up:", new { style = "color: red" })
                                                @Html.ActionLink("Sign Up", "BackupDriverSignUp", 
                                                    new{ idx = i, date = Model.BoxDay[row, col], cancel = false })                                            </span>
                                        }
                                    }
                                }
                                else /*BackupDriverName is Not Null:*/
                                {
                                    <br />
                                    <span style="font-size: small">
                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        @Html.Label("Backup Driver")
                                    </span>
                                    <br />
                                    @Html.Raw(Model.BoxBackupDriverName[i])
                                    if (Model.BoxBackupDriverId[i] == Model.CurrentUserId)
                                    {
                                        <br />
                                        <span style="text-decoration-color: red">
                                            &nbsp;&nbsp;
                                            @Html.Label("Cancel:", new { style = "color: red" })
                                            @Html.ActionLink("Cancel", "BackupDriverSignUp", 
                                                new{ idx = i, date = Model.BoxDay[row, col], cancel = true })                                        </span>
                                    }
                                    if (Model.BoxBackupDriverPhone[i] != null)
                                    {
                                        <br />
                                        @Html.Label(Model.BoxBackupDriverPhone[i])
                                    }

                                    if (Model.BoxBackupDriverPhone2[i] != null)
                                    {
                                        <br />
                                        @Html.Label(Model.BoxBackupDriverPhone2[i])
                                    }
                                    if (Model.BoxBackupDriverEmail[i] != null)
                                    {
                                        const string subject = "BHELP Food Program";
                                        var body = @Model.DriversSchedule[i].Date.ToLongDateString()
                                                   + " Backup Driver: " + @Model.BoxBackupDriverName[i];
                                        <a href="mailto:@Uri.EscapeDataString(Model.BoxBackupDriverEmail[i])
                                                ?Subject=@Uri.EscapeDataString(subject)
                                                &body=@Uri.EscapeDataString(body)">
                                            @Model.BoxBackupDriverEmail[i]
                                        </a>
                                    }
                                }

                                @if (Model.BoxBackupDriver2Name[i] != null)
                                {
                                    <br />
                                    <span style="font-size: small">
                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        @Html.Label("Backup Driver 2")
                                    </span>
                                    <br />
                                    @Html.Raw(Model.BoxBackupDriver2Name[i])

                                    if (Model.BoxBackupDriver2Phone[i] != null)
                                    {
                                        <br />
                                        @Html.Label(Model.BoxBackupDriver2Phone[i])
                                    }

                                    if (Model.BoxBackupDriver2Phone2[i] != null)
                                    {
                                        <br />
                                        @Html.Label(Model.BoxBackupDriver2Phone2[i])
                                    }
                                    if (Model.BoxBackupDriver2Email[i] != null)
                                    {
                                        const string subject = "BHELP Food Program";
                                        var body = @Model.DriversSchedule[i].Date.ToLongDateString()
                                                   + " Backup Driver: " + @Model.BoxBackupDriver2Name[i];
                                        <a href="mailto:@Uri.EscapeDataString(Model.BoxBackupDriver2Email[i])
                                           ?Subject=@Uri.EscapeDataString(subject)
                                           &body=@Uri.EscapeDataString(body)">
                                            @Model.BoxBackupDriver2Email[i]
                                        </a>
                                    }
                                }

                                @if (Model.BoxGroupName[i] != null)
                                {
                                    <br />
                                    <span style="font-size: small">
                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        @Html.Label("Group")
                                    </span>
                                    <br />
                                    @Html.Raw(Model.BoxGroupName[i])
                                }

                                @if (Model.BoxGroupDriverName[i] == null)
                                {
                                    if (!Model.BoxHoliday[i])
                                    {
                                        if (Model.BoxGroupName[i] != null)
                                        {
                                            <br />
                                            <span style="font-size: small">
                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                @Html.Label("Group Driver: ")
                                            </span>
                                            <span style="text-decoration-color: red">
                                                @Html.Label("TBD", new { style = "color: red; font-weight: bold" })
                                            </span>
                                            if (Model.BoxGroupDriverPhone[i] != null)
                                            {
                                                <br />
                                                @Html.Label(Model.BoxGroupDriverPhone[i])
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    <br />
                                    <span style="font-size: small">
                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        @Html.Label("Group Driver")
                                    </span>
                                    <br />
                                    @Html.Raw(Model.BoxGroupDriverName[i])

                                    if (Model.BoxGroupDriverPhone[i] != null)
                                    {
                                        <br />
                                        @Html.Label(Model.BoxGroupDriverPhone[i])
                                    }

                                    if (Model.BoxGroupDriverPhone2[i] != null)
                                    {
                                        <br />
                                        @Html.Label(Model.BoxGroupDriverPhone2[i])
                                    }
                                    if (Model.BoxGroupDriverEmail[i] != null)
                                    {
                                        const string subject = "BHELP Food Program";
                                        var body = @Model.DriversSchedule[i].Date.ToLongDateString()
                                                   + " Group Driver: " + @Model.BoxGroupDriverName[i];
                                        <a href="mailto:@Uri.EscapeDataString(Model.BoxGroupDriverEmail[i])
                                        ?Subject=@Uri.EscapeDataString(subject)
                                        &body=@Uri.EscapeDataString(body)">
                                            @Model.BoxGroupDriverEmail[i]
                                        </a>
                                    }
                                }

                                @if (Model.BoxNote[i] != null)
                                {
                                    <br />
                                    <span style="font-size: small">
                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        @Html.Label("Notes")
                                    </span>
                                    <br />
                                    @Html.Raw(Model.BoxNote[i].Replace(Environment.NewLine, "<br/>"))
                                }

                                @if (Model.BoxHolidayDescription[i] != null)
                                {
                                    <br />
                                    @Html.Raw(Model.BoxHolidayDescription[i].Replace(Environment.NewLine, "<br/>"))
                                }
                            </td>
                        }
                    </tr>
                }
            </table>
        </div>
        <br />
        <div>
            <input name="btnSubmit" type="submit" value="Submit My Changes" class="btn btn-default" id="SubmitButton"/>
            @*<b>&nbsp;Not Implemented Yet!</b>*@
        </div>
    }
    <div>
        <br />
        @Html.ActionLink("Return to Dashboard", "Index", "Home", new { }, null)
    </div>
</body>
</html>
