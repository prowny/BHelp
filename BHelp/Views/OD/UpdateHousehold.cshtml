@using System.Web.Mvc.Html
@model BHelp.ViewModels.HouseholdViewModel
@{ Layout = null; }
<!DOCTYPE html>

<html>
<style>
    #SaveButton {background-color: blue;color: white}
    #DeleteButton {background-color: red; color:white }
    #AddButton {background-color:green ;color: white}
    .agewidth{width:10px }
</style>
<head>
    <meta name="viewport" content="width=device-width"/>
    <title>OD_Update_Household</title>
</head>
<body>
@using (Html.BeginForm("Index", "Household", FormMethod.Post))
{
    <div>
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h3>Household</h3>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ClientId)

            @*<div class="form-group" id="Active Flag">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
            
            <h3>Call Log - check/edit client info, then create a delivery</h3>
            <div id="Address">
                <table>
                    <tr>
                        <td><b>Household At:</b></td>
                        <td style="text-align: right">
                            @Html.LabelFor(model => model.StreetNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.StreetNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StreetNumber, "", new { @class = "text-danger" })
                        </td>
                        <td style="text-align: right">
                            @Html.LabelFor(model => model.StreetName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td style="text-align: right">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </td>
                        <td style="text-align: right">
                            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td style="text-align: right">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </td>
                        <td style="text-align: right">
                            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                </table>
            </div>
            <div id="Family">
                <table>
                    <tr>
                        <td><b>Family Members:</b></td>
                        <td><b>First Name</b></td>
                        <td><b>Last Name</b></td>
                        <td><b>Age</b></td>
                    </tr>
                    @for (int i = 0; i < Model.FamilyMembers.Count; i++)
                    {
                        @Html.HiddenFor(mbr => Model.FamilyMembers[i].Id)
                        @Html.HiddenFor(mbr => Model.FamilyMembers[i].ClientId)
                        <tr>
                            <td></td>
                            @if (Model.FamilyMembers[i].Id > 0)
                            {
                                <td>@Html.EditorFor(mbr => Model.FamilyMembers[i].FirstName, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td>@Html.EditorFor(m => Model.FamilyMembers[i].LastName, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td>@Html.EditorFor(m => Model.FamilyMembers[i].Age, new { htmlAttributes = new { type = "number", min = "0", max = "110" } }) </td>
                                <td>
                                    @*Redirects to HouseholdController/Index POST:*@
                                    @*<input type="submit" value="Delete This Member" class="btn btn-default" id="DeleteButton"  name="@i.ToString()"/>*@
                                    @Html.EditorFor(model => model.FamilyMembers[i].Delete, new {htmlAttributes = new {@class = "form-control"}})
                                    Delete
                                </td>
                            }
                            @if (Model.FamilyMembers[i].Id == 0 && Model.FamilyMembers[i].ClientId == 0) // HH was added to FamilyMembers list with no Id
                            {
                                <td>@Html.EditorFor(mbr => Model.FamilyMembers[i].FirstName, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td>@Html.EditorFor(m => Model.FamilyMembers[i].LastName, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td>@Html.EditorFor(m => Model.FamilyMembers[i].Age, new { htmlAttributes = new { type = "number", min = "0", max = "110" } }) </td>
                                <td>Head of Household</td>}
                            @if (Model.FamilyMembers[i].ClientId < 0) // AddNew household member was added with ClientId = -1
                            {
                                <tr>
                                    <td></td>
                                    <td>@Html.EditorFor(mbr => Model.FamilyMembers[i].FirstName, new {htmlAttributes = new {@class = "form-control"}})</td>
                                    <td>@Html.EditorFor(m => Model.FamilyMembers[i].LastName, new {htmlAttributes = new {@class = "form-control"}})</td>
                                    <td>@Html.EditorFor(m => Model.FamilyMembers[i].Age, new {htmlAttributes = new {type = "number", min = "0", max = "110"}}) </td>
                                    <td>
                                        <input type="submit" value="Add Member" class="btn btn-default" id="AddButton" />
                                        @*Redirects to HouseholdController/Index POST:*@
                                        <input type="submit" value="Delete Checked Members" class="btn btn-default" id="DeleteButton" />
                                    </td>
                                </tr>
                            }
                        </tr>
                    }
                </table>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @*Redirects to HouseholdController/Index POST:*@
                    <input type="submit" value="Save Changes" class="btn btn-default" id="SaveButton"/>
                    <span style="color: darkmagenta">&#8592;Click this first if you made ANY changes</span>
                </div>
                <div>
                    @Html.ActionLink( "Create a Delivery", "AddDelivery", "OD", new { clientId = Model.ClientId }, null)
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to Select Page", "Index")
        </div>
        <div>
            @Html.ActionLink("Return to Dashboard", "ReturnToDashboard", new { })
        </div>
    </div>
}
</body>
</html>

<script type="text/javascript">
    $(document).ready(function () {
        $("#deleteMember").live("click", function(){
            $("#deleteCheckbxHidden").attr("value", "True");
        });
    });
</script>
