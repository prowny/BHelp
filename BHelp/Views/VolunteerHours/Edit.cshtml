@model BHelp.ViewModels.VolunteerHoursViewModel 
@{ Layout = null; }
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.min.css" /> @*// for date-picker*@
    <style>
        #btnSave {background-color: blue;color: white}
        #btnDelete {background-color: white;color: red }
    </style>
</head>
<body>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)   
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.OriginatorUserId)

        @if (Model.IsIndividual)
        {
            <span><strong>Edit Volunteer Hours for&nbsp;@Model.VolunteerName </strong></span>
            <br />
        }

        <div class="form-group">
            @Html.Label("Category:")&nbsp;
            @Html.TextBoxFor(model => model.CategoryName ,
                htmlAttributes: new {@readonly = true})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subcategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Subcategory, new SelectList(Model.SubcategoryList,"Value","Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Subcategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Date")
            <div>
                @Html.TextBox("Date", @Model.Date, "{0:MM/dd/yyyy}",
                    new { id = "HoursDate", style = "width: 75px;" })
                <span style="color: darkmagenta">&#8592;Click to change</span> @*Html left-arrow*@
            </div>
        </div>
    </div>

    <div class="form-group">
        <span>Hours></span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hours, new { htmlAttributes = new {min = "0", max = "80"}, id = "Hours"})
            @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <span><b>Minutes</b></span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Minutes, new { htmlAttributes = new { min = "0", max = "59" }, id = "Minutes" })
            @Html.ValidationMessageFor(model => model.Minutes, "", new { @class = "text-danger" })
            @if (!string.IsNullOrEmpty(Model.SubmitError))
            {<span style="color: red"><b>@Model.SubmitError</b></span>}
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input name ="btnEdit "type="submit" value="Save" class="btn btn-default" id="btnSave"/>
            <input name ="btnDelete" type="submit" value="Delete" class="btn btn-default" id="btnDelete"/>
        </div>
    </div>

}
<div>
    @Html.ActionLink("Back to Entry", "Create", new { hoursDate = Model.Date })
</div>
</body>
</html>
<script type="text/javascript">
    $(function () {
        window.$("#HoursDate").datepicker({ maxDate: +0 });
    });
</script>
