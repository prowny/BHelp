@model BHelp.ViewModels.VolunteerHoursViewModel 
@{ Layout = null; }
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <script src="~/Scripts/jquery-3.7.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.min.css" /> @*// for date-picker*@
    <style>
        #Hours {
            width: 30px;
        }

        #Minutes {
            width: 30px;
        }

        #PeopleCount {
            width: 30px;
        }

        #btnSave {
            background-color: blue;
            color: white
        }

        #btnDelete {
            background-color: white;
            color: red
        }
    </style>
    <link rel="icon" href="~/images/bhlogo.ico" type="image/x-icon" />
</head>
<body>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.OriginatorUserId)
        @Html.HiddenFor(model => model.Category)

        @if (Model.IsIndividual)
        {
            @Html.HiddenFor(m => m.PeopleCount)
            <span><strong>Edit Volunteer Hours for&nbsp;@Model.VolunteerName </strong></span>
            <br />
        }

        <div class="form-group">
            @Html.Label("Volunteer:")&nbsp;@Model.VolunteerName
        </div>
        <div class="form-group">
            @Html.Label("Category")&nbsp;
            <div>
                @Html.TextBoxFor(model => model.CategoryName,
                    htmlAttributes: new { @readonly = true })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Subcategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Subcategory, new SelectList(Model.SubcategorySelectList, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Subcategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Date")
            <div>
                @Html.TextBox("Date", @Model.Date, "{0:MM/dd/yyyy}",
                    new { id = "HoursDate", style = "width: 75px;" })
                <span style="color: darkmagenta">&#8592;Click to change</span> @*Html left-arrow*@
            </div>
        </div>
    </div>

    <div class="form-group">
        <span>Hours</span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hours, new { htmlAttributes = new {min = "0", max = "80"}, id = "Hours"})
            @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <span><b>Minutes</b></span>
        <div class="col-md-10">
            @Html.EditorFor(m => m.Minutes, new { htmlAttributes = new { min = "0", max = "59" }, id = "Minutes" })
            @Html.ValidationMessageFor(m => m.Minutes, "", new { @class = "text-danger" })
            @if (!string.IsNullOrEmpty(Model.SubmitError))
            {<span style="color: red"><b>@Model.SubmitError</b></span>}
        </div>
    </div>
    if (!Model.IsIndividual)
    {
        <div>
            <span><b>People Count</b></span>
            <div class="col-md-10">
                @Html.EditorFor(m => m.PeopleCount , new { htmlAttributes = new { min = "1", max = "50" }, id = "PeopleCount" })
                @Html.ValidationMessageFor(m => m.PeopleCount , "", new { @class = "text-danger" })
                @if (!string.IsNullOrEmpty(Model.SubmitError))
                {
                    @Html.HiddenFor(m => m.PeopleCount)
                    <span style="color: red"><b>@Model.SubmitError</b></span>
                }
            </div>
        </div>
    }
    <br/>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input name ="btnEdit "type="submit" value="Save" class="btn btn-default" id="btnSave"/>
            <input name ="btnDelete" type="submit" value="Delete" class="btn btn-default" id="btnDelete"/>
        </div>
    </div>

}
<div>
    @Html.ActionLink("Back to Entry", "Create", new { hoursDate = Model.Date })
</div>
</body>
</html>
<script type="text/javascript">
    var setMinDate = 0;
    var dateToday = new Date();
    var dayToday = dateToday.getDay();
    if (dayToday === 1) { setMinDate = -1; } /* go back to previous Monday*/
    if (dayToday === 2) { setMinDate = -2; }
    if (dayToday === 3) { setMinDate = -3; }
    if (dayToday === 4) { setMinDate = -4; }
    if (dayToday === 5) { setMinDate = -5; }
    $(function () {
        window.$("#HoursDate").datepicker({
            maxDate: +0, minDate: setMinDate, beforeShowDay: window.$.datepicker.noWeekends});
    });
</script>
