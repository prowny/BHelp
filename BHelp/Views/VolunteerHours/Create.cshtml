@model BHelp.ViewModels.VolunteerHoursViewModel
@{ Layout = null; }
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <style>
        #Hours {width: 30px;}
        #Minutes {width: 30px;}
        #btnSubmit {background-color: blue;color: white}
    </style>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.min.css" /> @*// for date-picker*@
</head>
<body>
@using (Html.BeginForm("Create", "VolunteerHours", FormMethod.Post))
{
    <div id="HeaderDiv">
        @Html.Hidden("IsIndividual", Model.IsIndividual)
        @Html.AntiForgeryToken()
        <span><b>Bethesda Help Enter Volunteer Hours</b></span>&nbsp;&nbsp;&nbsp;
        @Html.ActionLink("Return to Dashboard", "Index", "Home", new { }, null)
    </div>
    <hr>
    <span><i>Use this section to submit new hours:</i></span>
    <div id="SubmitHoursDiv">
        <table>
            <tr><td>Volunteer</td><td>Category</td><td>Subcategory</td></tr>
            @if (!Model.IsIndividual)
            { /* this section for non-individuals (with dropdown boxes) */
                <tr>
                    <td>
                        @Html.DropDownListFor(model => model.UserId,
                            new SelectList(Model.UserList, "Value", "Text"),
                            new { id = "UserDDL" })
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.Category,
                            new SelectList(Model.CategoryList, "Value", "Text"),
                            new { id = "CategoryDDL" })
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.Subcategory,
                            new SelectList(Model.SubcategoryList, "Value", "Text"),
                            new { id = "SubcategoryDDL"})
                    </td>
                </tr>
            }
            else 
            { /* this section for individuals (no dropdown boxes) */
                <tr>
                    <td>
                        @Html.TextBoxFor(model => model.VolunteerName,
                            new { @readonly = true, style = "width: 140px" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.CategoryName,
                            new { @readonly = true, style = "width: 85px" })
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.SubcategoryName,
                            new { @readonly = true, style = "width: 130px" })
                    </td>
                </tr>
            }
        </table>
            
        <table>
            <tr>
                <td><b>for Date:</b></td>
                @if(Model.IsIndividual)
                {
                <td>
                    @Html.TextBox("Date", @Model.Date, "{0:MM/dd/yyyy}",
                        new { id = "HoursDate", style = "width: 75px;" })
                    <span style="color: darkmagenta">&#8592;Click to change. (Also to set the week-ending date in the section below.) </span> @*Html left-arrow*@
                </td>
                }
                else
                {
                    <td>
                        @Html.TextBox("Date", @Model.Date, "{0:MM/dd/yyyy}",
                            new { id = "HoursDateNonIndiividual", style = "width: 75px;" })
                        <span style="color: darkmagenta">&#8592;Click to change. (Also to set the week-ending date in the section below.) </span> @*Html left-arrow*@
                    </td> 
                }
            </tr>
        </table>
        <table>
            <tr>
                <td style="text-align: right"><b>Hours:</b></td>
                <td>
                    @Html.EditorFor(m => m.Hours, new { htmlAttributes = new { min = "0", max = "80" }, id = "Hours" })
                    @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
                </td>
                <td style="text-align: right"><b>Minutes:</b></td>
                <td>
                    @Html.EditorFor(m => m.Minutes, new { htmlAttributes = new { min = "0", max = "59" }, id = "Minutes" })
                    @Html.ValidationMessageFor(model => model.Minutes, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>
    </div>

    <div id="SubmitDiv" class="col-md-offset-2 col-md-10">
        <input type="submit" value="Submit" class="btn btn-default" id="btnSubmit" />
        @if (!string.IsNullOrEmpty(Model.SubmitError))
        {
            <span style="color: red"><b>@Model.SubmitError</b></span>
        }
    </div>

    if (Model.HoursList.Count > 0)
    {
        <div id="ShowHoursDiv">
            <hr/>
            <span>
                <i>Hours Entered for the Reporting Week
                    @Model.WeekBeginningDateString - @Model.WeekEndingDateString:</i></span>
            <table class="table">
                <tr>
                    <td></td>
                    <td><b>Volunteer</b></td>
                    <td><b>Category</b></td>
                    <td><b>Subcategory</b></td>
                    <td style="text-align: center"><b>Date</b></td>
                    <td><b>Hours</b></td>
                    <td><b>Minutes</b></td>
                </tr>
                @foreach (var item in Model.HoursList)
                {
                    <tr>
                        <td>@Html.ActionLink("Edit", "Edit", new { recId = item.Id })</td>
                        <td>@Html.Label(item.VolunteerName)</td>
                        <td>@Html.Label(item.CategoryName)</td>
                        <td>@Html.Label(item.Subcategory)</td>
                        <td>@Html.Label(item.DateString)</td>
                        <td style="text-align: center">@Html.Label(item.HoursString)</td>
                        <td style="text-align: center">@Html.Label(item.MinutesString)</td>
                    </tr>
                }
            </table>
        </div>
    }
    <br />
    <div>
        @*@Html.ActionLink("Back to Hours Menu", "Index")
        <br />*@
        @Html.ActionLink("Return to Dashboard", "Index", "Home", new { }, null)
    </div>
}
</body>
</html>

<script type="text/javascript">
    var setMinDate = 0;
    var dateToday = new Date();
    var dayToday = dateToday.getDay();
    if (dayToday === 1) { setMinDate = -1; } /* go back to previous Monday*/
    if (dayToday === 2) { setMinDate = -2; }
    if (dayToday === 3) { setMinDate = -3; }
    if (dayToday === 4) { setMinDate = -4; }
    if (dayToday === 5) { setMinDate = -5; }
    $(function () {
        window.$("#HoursDate").datepicker({
            maxDate: +0, minDate: setMinDate, beforeShowDay: window.$.datepicker.noWeekends });
    });
</script>

<script type="text/javascript">
    /* DatePicker for All Users*/
    var setMinDate = 0;
    var dateToday = new Date();
    var dayToday = dateToday.getDay();
    if (dayToday === 1) { setMinDate = -3; } /* go back to previous Friday*/
    if (dayToday === 2) { setMinDate = -4; }
    if (dayToday === 3) { setMinDate = -5; }
    if (dayToday === 4) { setMinDate = -6; }
    if (dayToday === 5) { setMinDate = -7; }
    $(function () {
        window.$("#HoursDateNonIndiividual").datepicker({
            maxDate: +0, minDate: setMinDate , beforeShowDay: window.$.datepicker.noWeekends
        });
    });
</script>

<script type="text/javascript">
    window.$(function () {
        window.$('#HoursDate').change(function () {
            var _hoursDate = window.$(this).val();
            window.location.href = '@Url.Action("Create",
                                        "VolunteerHours")' + '?hoursDate=' + _hoursDate;
        });
    });
</script>

<script type="text/javascript">
    window.$(function () {
        window.$('#HoursDateNonIndiividual').change(function () {
            var _hoursDate = window.$(this).val();
            window.location.href = '@Url.Action("Create",
                                        "VolunteerHours")' + '?hoursDate=' + _hoursDate;
        });
    });
</script>

<script>
    window.$(function() {
        window.$('#UserDDL').change(function () {
            var _userId = window.$(this).val();
            var link = '@Url.Action("Create", "VolunteerHours",
                            new { userId = "-1" })';
            link = link.replace("-1", _userId);
            window.location.href = link;
        });
    });
</script>
