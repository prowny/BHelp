@model BHelp.ViewModels.VolunteerHoursViewModel
@{ Layout = null; }
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <style>
        #Hours {width: 45px;}
        #Minutes {width: 30px;}
        #PeopleCount {width: 30px;}
        #btnSubmit {background-color: blue;color: white}
    </style>
    <script src="~/Scripts/jquery-3.7.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.min.css" /> @*// for date-picker*@
    <link rel="icon" href="~/images/bhlogo.ico" type="image/x-icon" />
</head>
<body>
@using (Html.BeginForm("Create", "VolunteerHours", FormMethod.Post))
{
    <div id="HeaderDiv">
        @Html.Hidden("IsIndividual", Model.IsIndividual)
        @Html.Hidden("CategoryId", Model.Category)
        @Html.Hidden(".IsNonFoodServiceAdministration", Model.IsNonFoodServiceAdministration)
        @Html.Hidden("IsNonFoodServiceManagement", Model.IsNonFoodServiceManagement)
        @Html.AntiForgeryToken()
        <span><b>Bethesda Help Enter Volunteer Hours</b></span>&nbsp;&nbsp;&nbsp;
        @Html.ActionLink("Return to Dashboard", "Index", "Home", new { }, null)
    </div>
    <hr>
    <span><i>Use this section to submit new hours:</i></span>
    <div id="SubmitHoursDiv">
        @if (Model.IsIndividual && !Model.IsNonFoodServiceAdministration && !Model.IsNonFoodServiceManagement)
        { /* this section for individuals (no dropdown boxes) */
            <table>
                <tr><td>Volunteer</td><td>Category</td><td>Subcategory</td></tr>
                <tr>
                    <td>
                        @Html.TextBoxFor(m => m.VolunteerName,
                            new { @readonly = true, style = "width: 140px" })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.CategoryName,
                            new { @readonly = true, style = "width: 85px" })
                    </td>
                    @if (Model.Category != "A" && Model.Category != "M")
                    {
                        <td>
                            @Html.TextBoxFor(m => m.SubcategoryName,
                                new { @readonly = true, style = "width: 130px" })
                        </td>
                    }
                </tr>
            </table>
        } @*if IsIndividual*@

        @if (!Model.IsIndividual && !Model.IsNonFoodServiceAdministration && !Model.IsNonFoodServiceManagement)
        { /* this section for non-individuals (ALL - with dropdown boxes) */
            <table>
                <tr>
                    <td>
                        @Html.DropDownListFor(model => model.UserId,
                            new SelectList(Model.UserSelectList, "Value", "Text"),
                            new { id = "UserDDL" })
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.Category,
                            new SelectList(Model.CategorySelectList, "Value", "Text"),
                            new { id = "CategoryDDL" })
                    </td>
                    @if (string.IsNullOrEmpty(Model.A_MCategory))
                    {
                        <td>
                            @Html.DropDownListFor(m => m.Subcategory,
                                new SelectList(Model.SubcategorySelectList, "Value", "Text"),
                                new { id = "SubcategoryDDL" })
                        </td>
                    }
                </tr>
            </table>
        }

        @if (Model.IsNonFoodServiceAdministration || Model.IsNonFoodServiceManagement)
        { /* this section for NonFoodService users (Self only - with category dropdown boxes) */
            <table>
                <tr>
                    <td>
                        @Html.TextBoxFor(m => m.VolunteerName,
                            new { @readonly = true, style = "width: 140px" })
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.Category,
                            new SelectList(Model.CategorySelectList, "Value", "Text"),
                            new { id = "NFSCategoryDDL" })
                    </td>
                @if (string.IsNullOrEmpty(Model.A_MCategory))
                {
                    <td>
                        @Html.DropDownListFor(m => m.Subcategory,
                            new SelectList(Model.SubcategorySelectList, "Value", "Text"),
                            new { id = "NFSSubcategoryDDL" })
                    </td>
                }
                </tr>
            </table>
        }

        @if (Model.IsIndividual)
        { /* this section for individuals (HoursDateIndividual) */
            <table>
                <tr>
                    <td><b>for Date:</b></td>
                    <td>
                        @Html.TextBox("Date", @Model.Date, "{0:MM/dd/yyyy}",
                            new { id = "HoursDateIndividual", style = "width: 75px; text-align:center" })
                        <span style="color: darkmagenta">&#8592;Click to change.</span> @*Html left-arrow*@
                    </td>
                </tr>
            </table>
        }

        @if (!Model.IsIndividual)
        { /* this section for NonIndividuals (HoursDateNonIndividual) */
            <table>
                <tr>
                    <td>
                        @Html.TextBox("Date", @Model.Date, "{0:MM/dd/yyyy}",
                            new { id = "HoursDateNonIndiividual", style = "width: 75px; text-align:center" })
                        <span style="color: darkmagenta">&#8592;Click to change.</span> @*Html left-arrow*@
                    </td>
                </tr>
            </table>
        }
        <table>
            <tr>
                <td style="text-align: right"><b>Hours:</b></td>
                <td>
                    @Html.EditorFor(m => m.Hours, new { htmlAttributes = new { min = "0" }, id = "Hours" })
                    @Html.ValidationMessageFor(m => m.Hours, "", new { @class = "text-danger" })
                </td>
                <td style="text-align: right"><b>Minutes:</b></td>
                <td>
                    @Html.EditorFor(m => m.Minutes, new { htmlAttributes = new { min = "0", max = "59" }, id = "Minutes" })
                    @Html.ValidationMessageFor(model => model.Minutes, "", new { @class = "text-danger" })
                </td>

                @if (!Model.IsIndividual) /*Get PeopleCount if bulk entry - for non-Individuals*/
                {
                    <td style="text-align: right"><b>People Count:</b></td>
                    <td>
                        @Html.EditorFor(p => p.PeopleCount, new { htmlAttributes = new { min = "1", max = "50" }, id = "PeopleCount" })
                        <span style="color: darkmagenta">&nbsp;For Bulk-Entry records</span>
                        @Html.ValidationMessageFor(m => m.PeopleCount, "", new { @class = "text-danger" })
                    </td>
                }
            </tr>
        </table>
    </div> @*Submit Hours Div*@

    <div id="SubmitDiv" class="col-md-offset-2 col-md-10">
        <input type="submit" value="Submit" class="btn btn-default" id="btnSubmit" />
        @if (!string.IsNullOrEmpty(Model.SubmitError))
        {
            <span style="color: red"><b>@Model.SubmitError</b></span>
        }
    </div>

    if (Model.HoursList.Count > 0)
    {
        <div id="ShowHoursDiv">
            <hr/>
            <span>
                <i>Hours Entered for the Reporting Week
                    @Model.WeekBeginningDateString - @Model.WeekEndingDateString:</i></span>
            <table class="table">
                <tr>
                    <td></td>
                    <td><b>Volunteer</b></td>
                    <td><b>CategoryId</b></td>
                    <td><b>Subcategory</b></td>
                    <td style="text-align: center"><b>Date</b></td>
                    <td><b>Hours</b></td>
                    <td><b>Minutes</b></td>
                    <td><b>People Count</b></td>
                </tr>
                @foreach (var item in Model.HoursList)
                {
                    <tr>
                        <td>@Html.ActionLink("Edit", "Edit", new { recId = item.Id })</td>
                        <td>@Html.Label(item.VolunteerName)</td>
                        <td>@Html.Label(item.CategoryName)</td>
                        <td>@Html.Label(item.Subcategory)</td>
                        <td>@Html.Label(item.DateString)</td>
                        <td style="text-align: center">@Html.Label(item.HoursString)</td>
                        <td style="text-align: center">@Html.Label(item.MinutesString)</td>
                        <td style="text-align: center">@Html.Label(item.PeopleCountString)</td>
                    </tr>
                }
            </table>
            @if (!Model.IsIndividual && Model.TotalsList.Count > 0)
            {
            <table>
                <tr>
                    <td><b>Summary:&nbsp;</b></td>
                    <td><b>CategoryId</b></td>
                    <td><b>Total Hours</b></td>
                    <td><b>People Count</b></td>
                </tr>
                @foreach (var item in Model.TotalsList)
                {
                    <tr>
                        <td></td>
                        <td>@item.CategoryName</td>
                        <td style="text-align: center">@item.TotalHours.ToString("0.00")</td>
                        <td style="text-align: center">@item.PeopleCount.ToString()</td>
                    </tr>
                }
            </table>
            }
        </div>
    }
    <br />
    <div>
        @Html.ActionLink("Return to Dashboard", "Index", "Home", new { }, null)
    </div>
}
</body>
</html>

<script type="text/javascript">
    $(function () {
        /* DatePicker for Individual Users*/
        var setMinDate = 0;
        var dateToday = new Date();
        var dayToday = dateToday.getDay();
        if (dayToday === 1) { setMinDate = -0; }
        if (dayToday === 2) { setMinDate = -1; } /* go back to previous Monday*/
        if (dayToday === 3) { setMinDate = -2; }
        if (dayToday === 4) { setMinDate = -3; }
        if (dayToday === 5) { setMinDate = -4; }
        if (dayToday === 6) { setMinDate = -5; }
        if (dayToday === 0) { setMinDate = -6; }
        window.$("#HoursDateIndividual").datepicker({
            maxDate: +0, minDate: setMinDate, beforeShowDay: window.$.datepicker.noWeekends
        });
    });
</script>

<script type="text/javascript">
    $(function () {
        /* DatePicker for All Users*/
        var setMinDate = 0;
        var dateToday = new Date();
        var dayToday = dateToday.getDay();
        if (dayToday === 1) { setMinDate = -7; } /* go back to previous week Monday */
        if (dayToday === 2) { setMinDate = -8; }
        if (dayToday === 3) { setMinDate = -9; }
        if (dayToday === 4) { setMinDate = -10; }
        if (dayToday === 5) { setMinDate = -11; }
        if (dayToday === 6) { setMinDate = -12; }
        if (dayToday === 0) { setMinDate = -13; }
        window.$("#HoursDateNonIndiividual").datepicker({
            maxDate: +0, minDate: setMinDate , beforeShowDay: window.$.datepicker.noWeekends
        });
    });
</script>

<script type="text/javascript">
    window.$(function () {
        window.$('#HoursDateIndividual').change(function () {
            var _hoursDate = window.$(this).val();
            var _userId = window.$('#UserDDL').val();
            var link = '@Url.Action("Create", "VolunteerHours",
                            new { hoursDate = "-1",userId = "-2" })';
            link = link.replace("-1", _hoursDate);
            link = link.replace("-2", _userId);
            window.location.href = link;
        });
    });
</script>

<script type="text/javascript">
    window.$(function () {
        window.$('#HoursDateNonIndiividual').change(function () {
            var _hoursDate = window.$(this).val();
            var _userId = window.$('#UserDDL').val();
            var link = '@Url.Action("Create", "VolunteerHours",
                            new { hoursDate = "-1",userId = "-2" })';
            link = link.replace("-1", _hoursDate);
            link = link.replace("-2", _userId);
            window.location.href = link;
        });
    });
</script>

<script>
    window.$(function() {
        window.$('#UserDDL').change(function () {
            var _userId = window.$(this).val();
            var link = '@Url.Action("Create", "VolunteerHours",
                            new { userId = "-1" })';
            link = link.replace("-1", _userId);
            window.location.href = link;
        });
    });
</script>
<script>
    window.$(function() {
        window.$('#CategoryDDL').change(function() {
            var _cat = window.$(this).val();
            if (_cat === "A" || _cat === "M") {
                var link = '@Url.Action("Create", "VolunteerHours",
                                new {a_mCat = "-1" })';
                link = link.replace("-1", _cat);
                window.location.href = link;
            }
            else
            {
                var linkF = '@Url.Action("Create", "VolunteerHours",
                                new {a_mCat = "", fCat = "-1" })';
                _cat = "F";
                linkF = linkF.replace("-1", _cat);
                window.location.href = linkF;
            }
        });
    });
</script>
<script>
    window.$(function() {
        window.$('#NFSCategoryDDL').change(function() {
            var _cat = window.$(this).val();
            if (_cat === "A" || _cat === "M") {
                var link = '@Url.Action("Create", "VolunteerHours",
                                new {a_mCat = "-1" })';
                link = link.replace("-1", _cat);
                window.location.href = link;
            }
            else
            {
                var linkF = '@Url.Action("Create", "VolunteerHours",
                                 new {a_mCat = "", fCat = "-1" })';
                _cat = "F";
                linkF = linkF.replace("-1", _cat);
                window.location.href = linkF;
            }
        });
    });
</script>
