@model BHelp.ViewModels.RegisterViewModel
@{ Layout = null; }
<!DOCTYPE html>

<html>
<head>
    <title>Register</title>
    <style>
        .field-validation-error {color: red}
    </style>
</head>
<body>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <hr />
        <label class="field-validation-error">@Html.ValidationSummary("", new { @class = "text-danger" })</label>
        <p style="text-decoration:underline"><strong>Bethesda Help Food Delivery Program</strong></p>
        <p><strong>Register New User</strong></p>
        if (!String.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="form-group">
                @Html.LabelFor(m => m.ErrorMessage, new { @class = "col-md-2 control-label" })
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.UserName, new { autofocus = "autofocus" })
            </div>
        </div>

        <div class="form-group">
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                    </td>
                    <td>
                        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    </td>
                </tr>
            </table>
        </div>

        <div class="form-group">
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    </td>
                    <td>
                        @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                    </td>
                </tr>
            </table>
        </div>

        <div class="form-group">
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" }) (Preferred)
                    </td>
                    <td>
                        @Html.LabelFor(m => m.PhoneNumber2, new { @class = "col-md-2 control-label" }) (Alt)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.PhoneNumber2, new { @class = "col-md-2 control-label" })
                    </td>
                </tr>
            </table>
        </div>

        <div class="form-group">
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    </td>
                    <td>
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    </td>
                </tr>
            </table>
        </div>

        <table>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.TextBoxFor(m => m.Address, new { size = "46" })
                </td>
            </tr>
        </table>

        <table>
            <tr>
                <td>
                    @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
                </td>
                <td>
                    @Html.LabelFor(m => m.State, new { @class = "col-md-2 control-label" })
                </td>
                <td>
                    @Html.LabelFor(m => m.Zip, new { @class = "col-md-2 control-label" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.TextBoxFor(m => m.City)
                </td>
                <td>
                    @Html.DropDownListFor(m => m.State,
                        new SelectList(Model.States, "Value", "Text"))
                </td>
                <td>
                    @Html.TextBoxFor(m => m.Zip, new { size = "5" })
                </td>
            </tr>
        </table>

        <table>
            <tr>
                <td>
                    @Html.LabelFor(m => m.VolunteerCategory)
                </td>
                <td>
                    @Html.LabelFor(m => m.VolunteerSubcategory)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DropDownListFor(m => m.VolunteerCategory,
                        new SelectList(Model.VolunteerCategories, "Value", "Text"))
                    @Html.ValidationMessageFor(model => model.VolunteerCategory, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DropDownListFor(m => m.VolunteerSubcategory,
                        new SelectList(Model.VolunteerSubcategories, "Value", "Text"))
                    <span style="font-style: italic; color: darkmagenta">&nbsp;(*Subcategory required for Food Service CategoryId)</span>
                    @Html.ValidationMessageFor(model => model.VolunteerSubcategory, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>

        <table>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Notes, new { @class = "col-md-2 control-label" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.TextBoxFor(m => m.Notes, new { size = "46" })
                </td>
            </tr>
        </table>

        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Register" />
            </div>
        </div>
    }
    <br />
    <table>
        <tr>
            <td>
                @Html.ActionLink("Return to Dashboard", "Index", "Home", new { }, null)
            </td>
        </tr>
    </table>

    @Scripts.Render("~/bundles/jqueryval")

</body>
</html>
