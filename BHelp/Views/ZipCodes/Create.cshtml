@model BHelp.Models.ZipCode
@{ Layout = null; }
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <style>
        #CreateButton {
            background-color: green;
            color: white
        }  
        .zipwidth { width: 40px }
    </style>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Create New Zip Code</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "form-control " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Zip,
                        new{ onkeypress = "return OnlyNumeric(event)",
                            @class = "zipwidth", autofocus="autofocus" })
                    @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create"  class="btn btn-default" id="CreateButton" />
                </div>
            </div>
        </div>
    }
    
    <br />
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>

<script type="text/javascript">
function OnlyNumeric(e) {
    var charCode = (e.which) ? e.which : e.keyCode;
    if (charCode != 46 && charCode > 31
        && (charCode < 48 || charCode > 57))
        return false;

    return true;
        }
</script>