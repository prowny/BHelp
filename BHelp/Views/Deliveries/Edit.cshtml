@using System.Web.Mvc.Html
@model BHelp.ViewModels.DeliveryViewModel
@{ Layout = null; }
<!DOCTYPE html>

<style>
    #SaveButton {background-color: blue;color: white}
    #DeleteButton {background-color: red;color: white}
    #AddButton {background-color: green;color: white}
</style>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.min.css" /> @*// for date-picker*@
    <script src="@Url.Content("/Scripts/BHelpFunctions.js")"></script>
</head>
<body>
    <section id="editForm">
        @using (Html.BeginForm("Edit", "Deliveries", FormMethod.Post))
        {
            <input type="hidden" name="ReturnUrl" value="@Model.ReturnURL" />
            <input type="hidden" name="HistoryStartDate" value="@Model.HistoryStartDate" />
            <input type="hidden" name="HistoryEndDate" value="@Model.HistoryEndDate" />
            <input type="hidden" name="GiftCardsEligible" value="@Model.GiftCardsEligible" />
            @Html.AntiForgeryToken()
            <h4>Edit Delivery</h4>
            <hr /> // horizontal line
            <div class="form-horizontal">
                <table>
                    <tr>
                        <td style="color: darkmagenta">
                            @Html.Label(" (Snapshot of client when the delivery was created " +
                                        Model.LogDate.ToString("MM/dd/yyyy") + ":)")
                        </td>
                        <td style="display: none" id="Id">@Html.Label(Model.Id.ToString())</td>
                    </tr>
                </table>
                <span>
                    <b>Client:</b>&nbsp;@Html.Label(Model.ClientNameAddress)&nbsp;
                    <b>Phone:</b>&nbsp;@Html.Label(Model.Client.Phone)&nbsp;
                    @*<b>Notes:</b>&nbsp;@Html.Label(Model.Notes)*@
                </span>
                <b>Notes:</b>&nbsp;@Html.TextBoxFor(n => n.Notes,
 new
      {
          @readonly = "readonly",
  style = "width: 90px",
          title = Model.NotesToolTip
      })
            </div>
            <span>
                <b>Family:</b>&nbsp;
                @if (Model.SnapshotFamily != null)
                {
                    @Html.DropDownListFor(model => model.SnapshotFamily, new SelectList(Model.SnapshotFamily, "Value", "Text"), new { @class = "form-control" });
                }
                <b>Prior Delivery:</b>
                @if (Model.DatePriorDelivery != DateTime.MinValue)
                {
                    if (Model.DateLastDelivery != null)
                    {
                        @Html.Label(Model.DatePriorDelivery.ToShortDateString())
                    }
                }
                else
                {
                    @Html.Label("(none)")
                }
                <b>&nbsp;Gift Cards This Month:&nbsp;</b>@Html.Label(Model.GiftCardsThisMonth.ToString())
                <b>&nbsp;Gift Cards Eligible:</b>&nbsp;@Html.Label(Model.GiftCardsEligible.ToString())
            </span>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <hr /> // horizontal line
            <div class="form-group">
                <table>
                    <tr>
                        <td>Log Date:</td>
                        <td>
                            @Html.TextBoxFor(model => model.LogDate, Model.LogDate.ToString("MM/dd/yyyy"),
                                new { id = "LogDate", style = "width: 75px;" })
                        </td>
                        @*<td style="color: darkmagenta"> &#8592;Click to change</td>*@
                        <td style="color: darkmagenta"></td>

                        <td> &nbsp;&nbsp;&nbsp;&nbsp;Delivery Date:</td>
                        <td>
                            @Html.TextBoxFor(model => model.DateDelivered, "{0:MM/dd/yyyy}",
                            new { id = "DateDelivered", style = "width: 75px;" })
                        </td>
                        <td style="color: darkmagenta"> &#8592;Click to change</td>
                    </tr>
                </table>

                <table>
                    <tr>
                        <td>&nbsp;Originating OD:</td>
                        <td>&nbsp;Delivery Date OD:</td>
                        <td>&nbsp;Driver:</td>
                        <td>Zip Code:</td>
                    </tr>
                    <tr>
                        @if (Model.ODList != null)
                        {
                            <td>
                                @Html.DropDownListFor(model => model.ODId, new SelectList(Model.ODList, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ODId, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.DeliveryDateODId, new SelectList(Model.ODList, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DeliveryDateODId, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.DriverId, new SelectList(Model.DriversList, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.Zip, new SelectList(Model.ZipCodes, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                            </td>
                        }
                    </tr>
                </table>
                <table>
                    <tr>
                        <td>&nbsp;OD Notes:</td>
                        <td>&nbsp;Driver Notes:</td>
                    </tr>
                    <tr>
                        <td>
                            @Html.EditorFor(model => model.ODNotes, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ODNotes, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.DriverNotes, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DriverNotes, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                </table>
                <table>
                    <tr>
                        <td>@Html.LabelFor(model => model.FullBags, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                        <td>
                            @Html.EditorFor(model => model.FullBags, new { htmlAttributes = new { style = "width:35px", min = 0, max = 5 } })
                            @Html.ValidationMessageFor(model => model.FullBags, "", new { @class = "text-danger" })
                        </td>
                        <td>@Html.LabelFor(model => model.HalfBags, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                        <td>
                            @Html.EditorFor(model => model.HalfBags, new { htmlAttributes = new { style = "width:35px", min = 0, max = 3 } })
                            @Html.ValidationMessageFor(model => model.HalfBags, "", new { @class = "text-danger" })
                        </td>
                        <td>@Html.LabelFor(model => model.KidSnacks, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                        <td>
                            @Html.EditorFor(model => model.KidSnacks, new { htmlAttributes = new { style = "width:35px", min = 0, max = 20 } })
                            @Html.ValidationMessageFor(model => model.KidSnacks, "", new { @class = "text-danger" })
                        </td>
                        <td>@Html.LabelFor(model => model.GiftCards, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                        <td>
                            @Html.EditorFor(model => model.GiftCards, new { htmlAttributes = new { style = "width:35px", min = 0, max = 2 } })
                            @Html.ValidationMessageFor(model => model.GiftCards, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                </table>
            </div>
            <div class="form-group">
                &nbsp;@Html.Label("Status:")&nbsp;
                @Html.Label("Open")
                @Html.RadioButtonFor(m => m.SelectedStatus, "Open")&nbsp;&nbsp;
                @Html.Label("Delivered")
                @Html.RadioButtonFor(m => m.SelectedStatus, "Delivered")&nbsp;&nbsp;
                @Html.Label("Undelivered")
                @Html.RadioButtonFor(m => m.SelectedStatus, "Undelivered")
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" id="SaveButton"/>
                    @Html.ActionLink("Delete", "Delete", new { id = Model.Id, returnURL = Model.ReturnURL }, new { id = "DeleteButton" })
                </div>
            </div>
            <br />
            <div>
                @if (Model.ReturnURL.Contains("CallLogByLogDate"))
                {
                    @Html.ActionLink("Back to Delivery List", "CallLogByLogDate", new { startDate = Model.HistoryStartDate, endDate = Model.HistoryEndDate })
                }

                @if (Model.ReturnURL.Contains("CallLogIndividual"))
                {
                    @Html.ActionLink("Back to Delivery List", "CallLogIndividual", new { clientId = Model.ClientId })
                }
                
                @if (Model.ReturnURL.Contains("UpdateHousehold"))
                {
                    @Html.ActionLink("Back to OD Section", "Index", "OD")
                }
            </div>
            <div>
                @Html.ActionLink("Return to Dashboard", "ReturnToDashboard")
            </div>
        }
    </section>
</body>
</html>
<script>
    $(function () {
        window.$("#LogDate").datepicker();
    });
</script> @*LogDate datepicker*@
<script>
    $(function () {
        window.$("#DesiredDeliveryDate").datepicker();
    });
</script> @*DeliveryDate datepicker*@
<script>
    $(function () {
        window.$("#DateDelivered").datepicker();
    });
</script> @*DateDelivered datepicker*@
<script>
    $(document).ready(function () {
        ".datepicker".datepicker({
            dateFormat: "dd-mm-yy",
            changemonth: true,
            changeyear: true
        });
    });
</script>
