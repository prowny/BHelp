@model BHelp.ViewModels.DeliveryViewModel
@{ Layout = null; }
<!DOCTYPE html>

<html>
<style>
    #SaveButton {background-color: blue;color: white}
    #DeleteButton {background-color: red;color: white}
    #AddButton {background-color: green;color: white}
</style>
<head>
    <meta name="viewport" content="width=device-width"/>
    <title>Edit</title>
</head>
<body>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span><b>Delivery:</b>&nbsp;@Html.Label(Model.ClientNameAddress)&nbsp;@Html.Label(Model.Client.Phone) </span>
        <span>Last Delivery: </span>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeliveryDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.DeliveryDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Notes, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullBags, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullBags, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FullBags, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HalfBags, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.HalfBags, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.HalfBags, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KIdSnacks, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.KIdSnacks, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.KIdSnacks, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GiftCards, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.GiftCards, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.GiftCards, "", new {@class = "text-danger"})
            </div>
        </div>
        <br/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id ="SaveButton" />
            </div>
        </div>
    </div>
}
<br/>
<div>
    @Html.ActionLink("Back to Delivery List", "Index")
</div>
<div>
    @Html.ActionLink("Return to Dashboard", "ReturnToDashboard", new { })
</div>
</body>
</html>
