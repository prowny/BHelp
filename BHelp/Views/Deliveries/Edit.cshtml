@using System.Web.Mvc.Html
@model BHelp.ViewModels.DeliveryViewModel
@{ Layout = null; }
<!DOCTYPE html>

<style>
    #SaveButton {background-color: blue;color: white}
    #DeleteButton {background-color: red;color: white}
    #AddButton {background-color: green;color: white}
</style>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.min.css" /> @*// for date-picker*@
    <script src="@Url.Content("/Scripts/BHelpFunctions.js")"></script>
    <link rel="icon" href="~/images/bhlogo.ico" type="image/x-icon" />
</head>
<body>
    <section id="editForm">
        @using (Html.BeginForm("EditPost", "Deliveries", FormMethod.Post))
        {
            <input type="hidden" name="ReturnURL" value="@Model.ReturnURL" Id="ReturnURL" />
            <input type="hidden" name="HistoryStartDate" value="@Model.HistoryStartDate" />
            <input type="hidden" name="HistoryEndDate" value="@Model.HistoryEndDate" />
            <input type="hidden" name="GiftCardsEligible" value="@Model.GiftCardsEligible" />
            <input type="hidden" name="Phone" value="@Model.Phone" />

            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => Model.Id, new { id = "DeliveryId" })
            @Html.HiddenFor(model => Model.SelectedStatus, new { id = "SelectedStatus" })

            <h4>Edit Delivery</h4>
            <hr /> // horizontal line
            <div class="form-horizontal">
                <table>
                    <tr>
                        <td style="color: darkmagenta">
                            @Html.Label(" (Snapshot of client when the delivery was created " +
                                        Model.LogDate.ToString("MM/dd/yyyy") + ":)")
                        </td>
                        <td style="display: none" id="Id">@Html.Label(Model.Id.ToString())</td>
                    </tr>
                </table>
                <span><b>Client:&nbsp;</b></span>@Model.ClientNameAddress&nbsp; 
                <span><b>Phone:</b>&nbsp;@Html.Label(Model.Phone)&nbsp;</span>
                <span><b>Email:</b>&nbsp;@Model.Email</span>
                <span><b>Permanent Notes:</b>&nbsp;@Html.TextBoxFor(n => n.Notes,
                    new { @readonly = "readonly", style = "width: 90px", title = Model.NotesToolTip })</span>
            </div>
            <span>
                <b>Family:</b>&nbsp;
                @if (Model.SnapshotFamily == null)
                {
                    @Html.Label("(none)")
                }
                else
                {
                    foreach (var mbr in Model.SnapshotFamily)
                    {
                        @Html.Label(mbr.Text)
                    }
                }
                <b>&nbsp;Gift Cards This Month:&nbsp;</b>@Html.Label(Model.GiftCardsThisMonth.ToString())
                <b>&nbsp;Gift Cards Eligible:</b>&nbsp;@Html.Label(Model.GiftCardsEligible.ToString())
            </span>
            <br />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => Model.ClientId, new { id = "ClientId" })
            @Html.HiddenFor(m => m.Status, new { id = "Status" })
            <hr /> // horizontal line
            <div class="form-group">
                <table>
                    <tr>
                        <td>Log Date:</td>
                        <td>
                            @Html.TextBoxFor(model => model.LogDate, Model.LogDate.ToString("MM/dd/yyyy"),
                                new { id = "LogDate", style = "width: 75px;" })
                        </td>
                        @*<td style="color: darkmagenta"> &#8592;Click to change</td>*@
                        <td style="color: darkmagenta"></td>

                        <td> &nbsp;&nbsp;&nbsp;&nbsp;Delivery Date:</td>
                        <td>
                            @Html.TextBoxFor(model => model.DateDelivered,
                                "{0:MM/dd/yyyy}",
                            new { id = "DateDelivered", style = "width: 75px;" })
                        </td>
                        <td style="color: darkmagenta"> &#8592;Click to change</td>
                        @if (User.IsInRole("Administrator"))
                        {
                            <td style="color: red">
                                &nbsp;&nbsp;&nbsp;&nbsp;Administrator - Change Client:
                            </td>
                            <td >
                                @Html.DropDownListFor(m => m.ClientId, new SelectList(Model.ClientSelectList,
                                    "Value", "Text"), new { id = "NewClientId" })
                                @Html.ValidationMessageFor(model => model.ODId, "", new { @class = "text-danger" })
                            </td>
                        }
                    </tr>
                </table>

                <table>
                    <tr>
                        <td>&nbsp;Originating OD:</td>
                        <td>Delivery Date OD:</td>
                        <td>&nbsp;Driver:</td>
                        <td>Zip Code:</td>
                    </tr>
                    <tr>
                        @if (Model.ODList != null)
                        {
                            <td>
                                @Html.DropDownListFor(model => model.ODId, new SelectList(Model.ODList, "Value", "Text"), new { id = "ODId" })
                                @Html.ValidationMessageFor(model => model.ODId, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.DeliveryDateODId, new SelectList(Model.DeliveryDateODList, "Value", "Text"), new { id = "DeliveryDateODId" })
                                @Html.ValidationMessageFor(model => model.DeliveryDateODId, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.DriverId, new SelectList(Model.DriversList, "Value", "Text"), new { id = "DriverId" })
                                @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.Zip, new SelectList(Model.ZipCodes, "Value", "Text"), new { id = "Zip", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                            </td>
                        }
                    </tr>
                </table>
                <table>
                    <tr>
                        <td>&nbsp;OD Notes:</td>
                        <td>&nbsp;Driver Notes:</td>
                    </tr>
                    <tr>
                        <td>
                            @Html.EditorFor(model => model.ODNotes, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ODNotes, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.DriverNotes, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DriverNotes, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                </table>
                <table>
                    <tr>
                        <td>@Html.LabelFor(model => model.FullBags, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                        <td>
                            @Html.EditorFor(model => model.FullBags, new { htmlAttributes = new { id = "FullBags", style = "width:35px", min = 0, max = 5 } })
                            @Html.ValidationMessageFor(model => model.FullBags, "", new { @class = "text-danger" })
                        </td>
                        <td>@Html.LabelFor(model => model.HalfBags, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                        <td>
                            @Html.EditorFor(model => model.HalfBags, new { htmlAttributes = new { id = "HalfBags", style = "width:35px", min = 0, max = 3 } })
                            @Html.ValidationMessageFor(model => model.HalfBags, "", new { @class = "text-danger" })
                        </td>
                        <td>@Html.LabelFor(model => model.KidSnacks, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                        <td>
                            @Html.EditorFor(model => model.KidSnacks, new { htmlAttributes = new { id = "KidSnacks", style = "width:35px", min = 0, max = 20 } })
                            @Html.ValidationMessageFor(model => model.KidSnacks, "", new { @class = "text-danger" })
                        </td>
                        <td>@Html.LabelFor(model => model.GiftCards, htmlAttributes: new { @class = "control-label col-md-2" })</td>
                        <td>
                            @Html.EditorFor(model => model.GiftCards, new { htmlAttributes = new { id = "GiftCards", style = "width:35px", min = 0, max = 2 } })
                            @Html.ValidationMessageFor(model => model.GiftCards, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                </table>
                <table>
                    <tr>
                        <td>@Html.Label("Status:")&nbsp;</td>
                        <td>@Html.Label("Open")</td>
                        <td>@Html.RadioButtonFor(m => m.SelectedStatus, "Open", new { @onchange = "ToggleStatus('Open');"})&nbsp;&nbsp;</td>
                        <td>@Html.Label("Delivered")</td>
                        <td>@Html.RadioButtonFor(m => m.SelectedStatus, "Delivered", new { @onchange = "ToggleStatus('Delivered');"})&nbsp;&nbsp;</td>
                        <td>@Html.Label("Undelivered")</td>
                        <td>@Html.RadioButtonFor(m => m.SelectedStatus, "Undelivered", new{ @onchange = "ToggleStatus('Undelivered');"})</td>
                    </tr>
                </table>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" id="SaveButton" />
                    @Html.ActionLink("Delete", "Delete", new { id = Model.Id, returnURL = Model.ReturnURL }, new { id = "DeleteButton" })
                </div>
            </div>
            <br />
            <div>
                @if (Model.ReturnURL.Contains("Deliveries/Index"))
                {
                    @Html.ActionLink("Back to Delivery List", "Index")
                }

                @if (Model.ReturnURL.Contains("CallLogByLogDate"))
                {
                    @Html.ActionLink("Back to Delivery List", "CallLogByLogDate", new { startDate = Model.HistoryStartDate, endDate = Model.HistoryEndDate })
                }

                @if (Model.ReturnURL.Contains("CallLogIndividual"))
                {
                    @Html.ActionLink("Back to Delivery List", "CallLogIndividual", new { clientId = Model.ClientId })
                }

                @if (Model.ReturnURL.Contains("CallLogByDateDelivered"))
                {
                    @Html.ActionLink("Back to Delivery List", "CallLogByDateDelivered", new { startDate = Model.HistoryStartDate, endDate = Model.HistoryEndDate })
                }

                @if (Model.ReturnURL.Contains("UpdateHousehold"))
                {
                    @Html.ActionLink("Back to OD Section", "Index", "OD")
                }
            </div>
            <div>
                @Html.ActionLink("Return to Dashboard", "Index", "Home", new { }, null)
            </div>
        }
    </section>
</body>
</html>
<script>
    $(function () {
        window.$("#LogDate").datepicker();
    });
</script> @*LogDate datepicker*@

<script>
    $(function () {
        window.$("#DateDelivered").datepicker();
    });
</script> @*DateDelivered datepicker*@
<script>
    $(document).ready(function () {
        ".datepicker".datepicker({
            dateFormat: "dd-mm-yy",
            changemonth: true,
            changeyear: true
        });
    });
</script>
<script>
    window.$("#DateDelivered").change(function () {
        var Id = window.$("#DeliveryId").val();
        var newdatedelivered = window.$("#DateDelivered").val();
        var returnurl = window.$("#ReturnURL").val();
        var odid = window.$("#ODId").val();
        var deliverydateodid = window.$("#DeliveryDateODId").val();
        var odnotes = window.$("#ODNotes").val();
        var drivernotes = window.$("#DriverNotes").val();
        var zip = window.$("#Zip").val();
        var status = window.$("#SelectedStatus").val();
        var fullbags = window.$("#FullBags").val();
        var halfbags = window.$("#HalfBags").val();
        var kidsnacks = window.$("#KidSnacks").val();
        var giftcards = window.$("#GiftCards").val();

        var data = "id=" + Id + "|" + "newdatedelivered=" + newdatedelivered + "|";
        data += "returnurl=" + returnurl + "|" + "odid=" + odid + "|";
        data += "deliverydateodid=" + deliverydateodid + "|" + "odnotes=" + odnotes + "|";
        data += "drivernotes=" + drivernotes + "|" + "zip=" + zip + "|" + "status=" + status + "|";
        data += "fullbags =" + fullbags + "|" + "halfbags=" + halfbags + "|";
        data += "kidsnacks=" + kidsnacks + "|" + "giftcards=" + giftcards;
        window.$.ajax({
            type: "Get",
            url: "/Deliveries/EditDateDeliveredChange?parameters=" + data,
            success: function(data) {
                window.$("body").html(data);
            },
            error: function(response) {
                console.log(response.responseText);
            }
        });
    });
</script>
<script>
    function ToggleStatus(status)
    {
        window.$("#SelectedStatus").val(status);
    };
</script>
<script >
    window.$("#NewClientId").change(function () {
        var RecId = window.$("#DeliveryId").val().toString();
        var NewClientId = window.$("#NewClientId").val().toString();
        var data = RecId + "|" + NewClientId + "|" + window.$("#ReturnURL").val();
        window.$.ajax({
            type: "Get",
            url: "/Deliveries/ChangeDeliveryClient?parameters=" + data,
            success: function (data) {
                window.$("body").html(data);
            },
            error: function (response) {
                console.log(response.responseText);
            }
        });
    });
</script>
